digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0xc7f710 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %x = alloca i32, align 4\l  %y = alloca i32, align 4\l  %w = alloca i32, align 4\l  %z = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  br label %while.cond\l}"];
	Node0xc7f710 -> Node0xc802b0;
	Node0xc802b0 [shape=record,label="{while.cond:                                       \l  %0 = load i32, i32* %a, align 4\l  %1 = load i32, i32* %b, align 4\l  %cmp = icmp ne i32 %0, %1\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0xc802b0:s0 -> Node0xc80500;
	Node0xc802b0:s1 -> Node0xc805e0;
	Node0xc80500 [shape=record,label="{while.body:                                       \l  %2 = load i32, i32* %a, align 4\l  %3 = load i32, i32* %b, align 4\l  %cmp1 = icmp sgt i32 %2, %3\l  br i1 %cmp1, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0xc80500:s0 -> Node0xc80960;
	Node0xc80500:s1 -> Node0xc80a30;
	Node0xc80960 [shape=record,label="{if.then:                                          \l  %4 = load i32, i32* %b, align 4\l  %5 = load i32, i32* %a, align 4\l  %sub = sub nsw i32 %4, %5\l  store i32 %sub, i32* %x, align 4\l  %6 = load i32, i32* %a, align 4\l  %7 = load i32, i32* %b, align 4\l  %add = add nsw i32 %6, %7\l  store i32 %add, i32* %y, align 4\l  %8 = load i32, i32* %y, align 4\l  %9 = load i32, i32* %w, align 4\l  %add2 = add nsw i32 %8, %9\l  store i32 %add2, i32* %z, align 4\l  br label %if.end\l}"];
	Node0xc80960 -> Node0xc80b00;
	Node0xc80a30 [shape=record,label="{if.else:                                          \l  %10 = load i32, i32* %a, align 4\l  %11 = load i32, i32* %b, align 4\l  %add3 = add nsw i32 %10, %11\l  store i32 %add3, i32* %x, align 4\l  %12 = load i32, i32* %b, align 4\l  %13 = load i32, i32* %a, align 4\l  %sub4 = sub nsw i32 %12, %13\l  store i32 %sub4, i32* %y, align 4\l  %14 = load i32, i32* %y, align 4\l  %15 = load i32, i32* %a, align 4\l  %add5 = add nsw i32 %14, %15\l  store i32 %add5, i32* %z, align 4\l  br label %if.end\l}"];
	Node0xc80a30 -> Node0xc80b00;
	Node0xc80b00 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0xc80b00 -> Node0xc802b0;
	Node0xc805e0 [shape=record,label="{while.end:                                        \l  %16 = load i32, i32* %retval, align 4\l  ret i32 %16\l}"];
}
